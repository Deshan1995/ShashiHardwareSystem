/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hms;
import DBconnection.DBconnect;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author DELL-PC
 */
public class assignSalaries extends javax.swing.JInternalFrame {
    Connection  conn = null;
    PreparedStatement pst = null,pst1=null,pst2=null,pst3=null,pst4=null,pst5=null,pst6=null,pst7=null,pst8=null,pst9=null,pst10=null;
    ResultSet rs = null,rs1=null,rs2=null,rs3=null,rs4=null,rs5=null,rs6=null,rs7=null,rs8=null,rs9=null,rs10=null;
    
    String type=null;
    Double basicsal,yearlybonus,leavebonus,leavedeductions,epf,etf,depf,netsal,leavebo,leavededuct;
    long atdate,days1;
    int leavespermonth;
    /**
     * Creates new form updateEmployee
     */
    public assignSalaries() {
        
            initComponents();
            conn=DBconnect.connectDb();
            tableload();
            to.setEnabled(false);
            int size =jTable2.getRowCount();
            
            for(int i=0;i<size;i++)
            {
                asutype.addItem(jTable2.getValueAt(i, 0).toString());
            }
            
            showtime();
        
        
    }
    
    void showtime(){
        new Timer(0,new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d=new Date();
                SimpleDateFormat s=new SimpleDateFormat("hh:mm:ss a");
                time.setText(s.format(d));
            }
        }).start();
    }
    
    public void tableload()
    {
        String sql = "select * from usertype";
        try{
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        
        jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
         {
                
         }
        finally
        {
            try {
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(updateEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
       
    }
 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        asutype = new javax.swing.JComboBox<>();
        asvalue = new javax.swing.JTextField();
        asufield = new javax.swing.JComboBox<>();
        asset = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane(jTable2);
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        wdays = new javax.swing.JTextField();
        to = new com.toedter.calendar.JDateChooser();
        bonus = new javax.swing.JCheckBox();
        from = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1230, 685));
        getContentPane().setLayout(null);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "Calculate Salary"));
        jPanel5.setForeground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Assign Salaries & Employee types");

        time.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 466, Short.MAX_VALUE)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "Assign Salaries"));

        asutype.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 2), "Select user type"));

        asvalue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                asvalueKeyTyped(evt);
            }
        });

        asufield.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "basic_salary", "leave_bonus", "yearly_bonus", "leave_deductions", "leaves_per_month", "overtime" }));
        asufield.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 2), "Updating field"));

        asset.setText("Set");
        asset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Value");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(asutype, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(asufield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(asvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(asset, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(asutype, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(asufield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(asset, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jTable2.setBackground(new java.awt.Color(204, 255, 204));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "Calculate Salary"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Working days :-");

        jButton2.setText("Calculate salary for month");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        to.setDateFormatString("MM dd, yyyy");

        bonus.setText("Yearly Bonus");

        from.setDateFormatString("MM dd, yyyy");

        jButton3.setText("Get Date Range");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(bonus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wdays, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jButton3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bonus)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wdays, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(195, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 0, 1170, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetActionPerformed
        
        String user = asutype.getSelectedItem().toString();
        String field = asufield.getSelectedItem().toString();
        
        try{
        if(!asvalue.getText().equals(""))
        {
        try {
            double val = Double.parseDouble(asvalue.getText());
            String sql = "UPDATE usertype SET '"+field+"'='"+val+"' WHERE user_type = '"+user+"'";
            
            pst=conn.prepareStatement(sql);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"Successfully updated");
            tableload();
            asvalue.setText("");
        } catch (Exception e) {
            
            System.out.println(e);
        }finally
        {
            try {
                
            } catch (Exception e) {
            }
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please enter the updating value");
        }
        
        
        }catch(Exception e)
        {
            System.out.println(e);
        }finally
        {
            try {
                pst.close();
                
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_assetActionPerformed

    private void asvalueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_asvalueKeyTyped
        char c = evt.getKeyChar();
        
        if(Character.isLetter(c))
        {
            evt.consume();
         JOptionPane.showMessageDialog(null, "Enter only numbers");
        }   
    }//GEN-LAST:event_asvalueKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         
            
        
        try{ 
            SimpleDateFormat format = new SimpleDateFormat("MM dd, yyyy");
            
            
            
            
            

//            SimpleDateFormat formatm = new SimpleDateFormat("MM");
//            
//            
//            
//            String month2 = formatm.format(jMonthChooser2.getMonth()).toString();
//            String month1 = formatm.format(jMonthChooser1.getMonth()).toString();
//            String year=syear.getText();
//            
//            
//            String ds = (month1+" 25, "+year);
//            String ds1 = (month2+" 25, "+year);
//            
//            Date d4 = format.parse(ds);
//            Date d5 = format.parse(ds1);
//                        
//            long diff1=d5.getTime()-d4.getTime();
//            long hours1=diff1/(60*60*1000);
//            long days1=(hours1/24)+1;
//            
//            
//            System.out.println(d4);
            
            
//              
//            ArrayList<String> eidlist = new ArrayList<String>();
//            ArrayList<String> alist = new ArrayList<String>();
                
              

//              
            //from this point
            Date d1=format.parse(format.format(from.getDate()));
            Date d2=format.parse(format.format(to.getDate()));
            
            
            
            String D1 =((JTextField)from.getDateEditor().getUiComponent()).getText();
            String D2 = ((JTextField)to.getDateEditor().getUiComponent()).getText();  
//            
            long diff=d2.getTime()-d1.getTime();
            
            long hours=diff/(60*60*1000);
            long days=(hours/24);
            
            days1 = days;
            //to this point
//            
//            System.out.println(days);
//            

//            
//            while(rs.next())
//            {
//                eidlist.add();
//            
//            }
            
        // from this point to end
        try{
        ArrayList<String> list = new ArrayList<String>();
        

        
        String sql1 = "SELECT employee_id FROM Employee";
        pst = conn.prepareStatement(sql1);
        rs = pst.executeQuery();
        
        
        while(rs.next())
        {
            list.add(rs.getString("employee_id"));
        }
        
        try{
        String sql2 = "SELECT * FROM Salary where Date BETWEEN '"+D1+"' AND '"+D2+"'";
        pst1 = conn.prepareStatement(sql2);
        rs1 = pst1.executeQuery();
        
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        finally{
                try {
                    
                    
                } catch (Exception e) {
                }
            }
        
        
        if(!rs1.next())
        {
            
        for(int i=0;i<list.size();i++)
        {
            try{
            String cq = "SELECT * From Employee where employee_id = '"+list.get(i)+"'";
            pst3=conn.prepareStatement(cq);
            rs2=pst3.executeQuery();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }finally{
                try {
                   
                } catch (Exception e) {
                }
            }
            
            try{
            String sql = "SELECT COUNT(EID) AS count FROM Record WHERE status = 1 AND Date BETWEEN '"+D1+"' AND '"+D2+"' AND EID='"+list.get(i)+"'";
            pst10 = conn.prepareStatement(sql);
            rs10 = pst10.executeQuery();
            
            if(rs10.next())
            {
                atdate=rs10.getInt("count");
            }
            System.out.println("Atdate = " +atdate);
            
            if(rs2.next())
            {
            type = rs2.getString("designation");
            }
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
            finally{
                try {
//                
                     rs2.close();
                    pst2.close();
                } catch (Exception e) {
                }
            }

            try
                {
            switch(type){
            
                case"Cashier": 
                String aq = "Select * From usertype where user_type = 'Cashier'";
                pst4=conn.prepareStatement(aq);
                rs3 = pst4.executeQuery();
                    if(rs3.next())
                    {
                    basicsal=rs3.getDouble("basic_salary");
                    yearlybonus=rs3.getDouble("yearly_bonus");
                    leavebonus=rs3.getDouble("leave_bonus");
                    leavedeductions=rs3.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs3.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
                
                case"Admin": 
                String aq1 = "Select * From usertype where user_type = 'Admin'";
                pst5=conn.prepareStatement(aq1);
                rs4 = pst5.executeQuery();
                    if(rs4.next())
                    {
                    basicsal=rs4.getDouble("basic_salary");
                    yearlybonus=rs4.getDouble("yearly_bonus");
                    leavebonus=rs4.getDouble("leave_bonus");
                    leavedeductions=rs4.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs4.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
              
                case"Worker": 
                String aq2 = "Select * From usertype where user_type = 'Worker'";
                pst6=conn.prepareStatement(aq2);
                rs5 = pst6.executeQuery();
                    if(rs5.next())
                    {
                    basicsal=rs5.getDouble("basic_salary");
                    yearlybonus=rs5.getDouble("yearly_bonus");
                    leavebonus=rs5.getDouble("leave_bonus");
                    leavedeductions=rs5.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs5.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
                    
                case"Agency Manager": 
                String aq3 = "Select * From usertype where user_type = 'Agency Manager'";
                pst7=conn.prepareStatement(aq3);
                rs6 = pst7.executeQuery();
                    if(rs6.next())
                    {
                    basicsal=rs6.getDouble("basic_salary");
                    yearlybonus=rs6.getDouble("yearly_bonus");
                    leavebonus=rs6.getDouble("leave_bonus");
                    leavedeductions=rs6.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs6.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
                    
                case"Stock keeper": 
                String aq4 = "Select * From usertype where user_type = 'Stock keeper'";
                pst8=conn.prepareStatement(aq4);
                rs7 = pst8.executeQuery();
                    if(rs7.next())
                    {
                    basicsal=rs7.getDouble("basic_salary");
                    yearlybonus=rs7.getDouble("yearly_bonus");
                    leavebonus=rs7.getDouble("leave_bonus");
                    leavedeductions=rs7.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs7.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
                
                case"Driver": 
                String aq5 = "Select * From usertype where user_type = 'Driver'";
                pst9=conn.prepareStatement(aq5);
                rs8 = pst9.executeQuery();
                    if(rs8.next())
                    {
                    basicsal=rs8.getDouble("basic_salary");
                    yearlybonus=rs8.getDouble("yearly_bonus");
                    leavebonus=rs8.getDouble("leave_bonus");
                    leavedeductions=rs8.getDouble("leave_deductions");
                    etf=(basicsal*3)/100;
                    epf=(basicsal*20)/100;
                    depf=(basicsal*8)/100;
                    leavespermonth=rs8.getInt("leaves_per_month");
                    netsal=basicsal+(leavebonus*(leavespermonth-(days-atdate)))-depf;
                    }
                    break;
            
            }
              }catch(Exception e)
                {
                
                }finally
                {
                    try {
                        pst8.close();
                    pst7.close();
                    pst6.close();
                    pst5.close();
                    pst4.close();
                    pst9.close();
                    
                    rs3.close();
                    rs4.close();
                    rs5.close();
                    rs6.close();
                    rs7.close();
                    rs8.close();
                    
                    } catch (Exception e) {
                    }
                }
            
            if((leavebonus*(leavespermonth-(days-atdate)))>0)
            {
                leavebo=(leavebonus*(leavespermonth-(days-atdate)));
                leavededuct=depf;
            
            }
            else if((leavebonus*(leavespermonth-(days-atdate)))<0)
            {
                leavededuct = (leavebonus*(leavespermonth-(days-atdate)))-depf;
                leavebo=0.0;
            }
            
            try{
            String addQuery;
            
            if(bonus.isSelected())
            {
                netsal=netsal+yearlybonus;
            addQuery= "Insert into Salary values ('"+list.get(i)+"','"+basicsal+"','"+yearlybonus+"','"+leavebo+"','"+epf+"','"+etf+"','"+leavededuct+"','"+netsal+"','"+D2+"')";
            }
            else
            {
            
            addQuery= "Insert into Salary values ('"+list.get(i)+"','"+basicsal+"',0.00,'"+leavebo+"','"+epf+"','"+etf+"','"+leavededuct+"','"+netsal+"','"+D2+"')";
            
            }
            pst2=conn.prepareStatement(addQuery);
            pst2.executeUpdate();
            tableload();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
            finally
            {
                try {
                    
                    
                    
                } catch (Exception e) {
                }
            }
        }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Already Generated report for this month");
        }
            

            
            String ReturnDate=(((JTextField)to.getDateEditor().getUiComponent()).getText());
            

            
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
           e.printStackTrace();
       }finally{
                try {
                    pst2.close();
                    
                    pst3.close();
                    pst10.close();
                    pst1.close();
                    pst.close();
                    
                } catch (Exception e) {
                } 
        }
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
           e.printStackTrace();}
        finally{
                try {

                    
                       try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(assignSalaries.class.getName()).log(Level.SEVERE, null, ex);
        }     
                    
                    
                } catch (Exception e) {
                    System.out.println("f");
                }
                   }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     

	    SimpleDateFormat format = new SimpleDateFormat("MM dd, yyyy");
            SimpleDateFormat dy = new SimpleDateFormat("yyyy");
            SimpleDateFormat dm = new SimpleDateFormat("MM");
            SimpleDateFormat dd = new SimpleDateFormat("dd");

            java.util.Date d1 = null;
            

	try{
	    
		String date =((JTextField)from.getDateEditor().getUiComponent()).getText();
              
                    d1 = format.parse(date);
                    int year1 = Integer.parseInt(dy.format(d1));
                    int month1 = Integer.parseInt(dm.format(d1));
                    int day1= Integer.parseInt(dd.format(d1));

                  if(month1+1<10)
                  {
		((JTextField)to.getDateEditor().getUiComponent()).setText("0"+(month1+1)+" "+day1+", "+year1);
                  }
                  else
                  {
		((JTextField)to.getDateEditor().getUiComponent()).setText((month1+1)+" "+day1+", "+year1);
                  }
                  
                  
                    }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }


    }//GEN-LAST:event_jButton3ActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asset;
    private javax.swing.JComboBox<String> asufield;
    private javax.swing.JComboBox<String> asutype;
    private javax.swing.JTextField asvalue;
    private javax.swing.JCheckBox bonus;
    private com.toedter.calendar.JDateChooser from;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel time;
    private com.toedter.calendar.JDateChooser to;
    private javax.swing.JTextField wdays;
    // End of variables declaration//GEN-END:variables
}
