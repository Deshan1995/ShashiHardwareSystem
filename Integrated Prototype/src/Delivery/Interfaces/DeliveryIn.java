/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Delivery.Interfaces;

//import Delivery.Model.DBConnection;
import DBconnection.DBconnect;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Manushi-PC
 */
public class DeliveryIn extends javax.swing.JInternalFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    PreparedStatement pstupdate = null;   
    
    private static final String API_KEY = "AIzaSyBeRbLtOqrLbPkyyObLwzLyedOur9bFgm8";
    
    /**
     * Creates new form DeliveryIn
     */
    public DeliveryIn() {
        initComponents();
        conn = DBconnect.connectDb();
        loadSupplierTable();
        loadSupplierDeliveryTable();

        validateDeliveID();
        
        jTextArea1.setVisible(false);
        
        addrTxt.setEditable(false);
        distntTxt.setEditable(false);
        delivIdTxt.setEditable(false);
        supOrIdTxt.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        supOrIdTxt = new javax.swing.JTextField();
        costTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addrTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        distntTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        delivIdTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        supDelivTbl = new javax.swing.JTable();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("   Supplier Delivery");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cost", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 22))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Supplier Order ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Cost");

        costTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costTxtKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Address");

        addrTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrTxtActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Distance");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Delivery ID");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3))
                .addGap(106, 106, 106)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(supOrIdTxt)
                    .addComponent(addrTxt)
                    .addComponent(costTxt)
                    .addComponent(distntTxt)
                    .addComponent(delivIdTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(delivIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(supOrIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addrTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(distntTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(costTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        supplierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(supplierTable);

        supDelivTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        supDelivTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supDelivTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(supDelivTbl);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Schedule", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 22))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Date");

        jDateChooser1.setDateFormatString("dd-MM-yyyy");

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleBtn.setText("Delete");
        deleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleBtnActionPerformed(evt);
            }
        });

        newBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9))
                    .addComponent(addBtn))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleBtn)
                        .addGap(18, 18, 18)
                        .addComponent(newBtn)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(editBtn)
                    .addComponent(deleBtn)
                    .addComponent(newBtn))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(518, 518, 518)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(518, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(325, 325, 325)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(325, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supplierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTableMouseClicked
        // TODO add your handling code here:
        int row = supplierTable.getSelectedRow();
                
        String orderId = supplierTable.getValueAt(row, 0).toString();
        String addrs = supplierTable.getValueAt(row, 1).toString();
        
        supOrIdTxt.setText(orderId);
        addrTxt.setText(addrs);
    }//GEN-LAST:event_supplierTableMouseClicked

    private void addrTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrTxtActionPerformed
        try {
            // TODO add your handling code here:
            String address = addrTxt.getText();
            
            jTextArea1.setText(getMap(address));
            distntTxt.setText(""+getDistance());
        } catch (IOException ex) {
            Logger.getLogger(DeliveryIn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addrTxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        if((supOrIdTxt.getText().equals(""))||(distntTxt.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "Select a tuple", "Empty Fields", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try {
                int res= addDelivery();
                if(res>0){
                    JOptionPane.showMessageDialog(this, "Added Success");
                }
            } catch (SQLException ex) {
                Logger.getLogger(DeliveryIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadSupplierDeliveryTable();
            clear();
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        if(delivIdTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Select a tuple", "Empty Fields", JOptionPane.ERROR_MESSAGE);
        }
        else{
            int value = JOptionPane.showConfirmDialog(null, "Do you want to save changes?");

            if(value == 0){
                try {
                    //
                    String did = delivIdTxt.getText();
                    String oid = supOrIdTxt.getText();
                    double cost = Double.parseDouble(costTxt.getText());
                    String ddate = (((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());

                    String SQL = "Update SupplierDelivery SET DelivDate ='"+ddate+"' WHERE supDelivId = '"+did+"'";
                    Statement stm= conn.createStatement();
                    stm.executeUpdate(SQL);
                } catch (SQLException ex) {
                    Logger.getLogger(DeliveryIn.class.getName()).log(Level.SEVERE, null, ex);
                }
                loadSupplierDeliveryTable();
            }
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleBtnActionPerformed
        // Delete a scheduled delivery
        if(delivIdTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Select a tuple", "Empty Fields", JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            int value = JOptionPane.showConfirmDialog(null, "Do you want to delete this entry?");

            if(value == 0){

                try {
                    String did= delivIdTxt.getText();
                    String oid = supOrIdTxt.getText();

                    String SQL = "DELETE FROM SupplierDelivery where supDelivId = '"+did+"' AND SupOrderId = '"+oid+"'";
                    Statement stm= conn.createStatement();
                    stm.executeUpdate(SQL);
                } catch (SQLException ex) {
                    Logger.getLogger(Vehicle.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            loadSupplierDeliveryTable();  
            clear();
        }
    }//GEN-LAST:event_deleBtnActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_newBtnActionPerformed

    private void supDelivTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supDelivTblMouseClicked
        // TODO add your handling code here:
        int row = supDelivTbl.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)supDelivTbl.getModel();
                
        String did = supDelivTbl.getValueAt(row, 0).toString();
        String sid = supDelivTbl.getValueAt(row, 1).toString();
        String cost = supDelivTbl.getValueAt(row, 2).toString();
        String adrs = supDelivTbl.getValueAt(row, 4).toString();
        
        delivIdTxt.setText(did);
        supOrIdTxt.setText(sid);
        costTxt.setText(cost);
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(model.getValueAt(row,3).toString());
        addrTxt.setText(adrs);
        
    }//GEN-LAST:event_supDelivTblMouseClicked

    private void costTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costTxtKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();

        if(Character.isLetter(c))
        {
            evt.consume();
            JOptionPane.showMessageDialog(null,"Enter only Numbers");
        }
    }//GEN-LAST:event_costTxtKeyTyped

    private void loadSupplierTable(){
    
        try {
            Statement stm=conn.createStatement();
            String SQL="SELECT o.OrderID, d.Address FROM SupplierOrder o, SupplierDetails d where o.SupplierID=d.SupplierID";
            ResultSet rs=stm.executeQuery(SQL);
            
            supplierTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(DeliveryIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
//            rs.close();
//            ps.close();
        }
    
    }
    
    public String getMap(String destination){
        try {
            String origin= "Bataganwila,Galle";
            destination = destination.replace(' ', '+');
            HttpURLConnection connection = null;
            URL url = new URL("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins="+origin+"&destinations="+destination+"&key="+API_KEY);
            connection = (HttpURLConnection) url.openConnection();
            InputStream is = connection.getInputStream();
            BufferedReader rd = new BufferedReader(new InputStreamReader(is));
            StringBuffer response = new StringBuffer();
            String line;
            while ((line = rd.readLine()) != null) {
                response.append(line);
                response.append('\n');
            }
            rd.close();
            return response.toString();
        } catch (MalformedURLException ex) {
            Logger.getLogger(Map.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Map.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public double getDistance() throws FileNotFoundException, IOException{
        
        double dis;
        int count =-1;
        char[] arr = new char[100];
        for (String line : jTextArea1.getText().split("\\n")){
            count++;
            if(count == 8){
                int len = line.length();
                line.getChars(28, len-6, arr, 0);
                dis = Double.parseDouble(String.valueOf(arr));       
    
                return dis;
            }
        }
        return -1;
    }

    private int addDelivery() throws SQLException{
    
        String did = delivIdTxt.getText();
        String oid = supOrIdTxt.getText();
        double cost = Double.parseDouble(costTxt.getText());
        String ddate = (((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());
        String adrs = addrTxt.getText();
        //String vehi = vehiCombo.getSelectedItem().toString();
        //String driver = driverCombo.getSelectedItem().toString();
        
        String SQL="INSERT INTO SupplierDelivery VALUES ('"+did+"','"+oid+"','"+cost+"', '"+ddate+"','"+adrs+"')";
        Statement stm=conn.createStatement(); 
        int res = stm.executeUpdate(SQL);
        
        return res;
    
    }
    
    private void loadSupplierDeliveryTable(){
    
        try {
            Statement stm=conn.createStatement();
            String SQL="SELECT * FROM SupplierDelivery";
            ResultSet rs = stm.executeQuery(SQL);
            
            supDelivTbl.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(DeliveryIn.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    private void clear(){
    
        distntTxt.setText(null);
        supOrIdTxt.setText(null);
        addrTxt.setText(null);
        costTxt.setText(null);
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(null);
        validateDeliveID();
    }

    
    private void validateDeliveID(){
    

    ArrayList<String> list = new ArrayList<String>();
        try {
            String sql = "SELECT supDelivID as delID FROM SupplierDelivery";
            Statement stm= conn.createStatement();
            
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next())
            {
                list.add(rs.getString("delID"));
            }
            
            
            String a = list.get(list.size()-1);
            String ino[]=a.split("SD");
                
            int no=Integer.parseInt(ino[1]);
            no=no+1;
            delivIdTxt.setText("SD"+no);
           
            
            System.out.println(a);
        } catch (Exception e) {
        }
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField addrTxt;
    private javax.swing.JTextField costTxt;
    private javax.swing.JButton deleBtn;
    private javax.swing.JTextField delivIdTxt;
    private javax.swing.JTextField distntTxt;
    private javax.swing.JButton editBtn;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton newBtn;
    private javax.swing.JTable supDelivTbl;
    private javax.swing.JTextField supOrIdTxt;
    private javax.swing.JTable supplierTable;
    // End of variables declaration//GEN-END:variables
}
